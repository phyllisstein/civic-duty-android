apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "nyc.ignitelabs.civicduty"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Google libraries
    def appCompatVersion = "1.1.0-rc01" // do not update until https://issuetracker.google.com/issues/141132133 has been fixed
    def cardViewVersion = "1.0.0"
    def recyclerViewVersion = "1.1.0-rc01"
    def constraintLayoutVersion = "1.1.3"
    def fragmentVersion = "1.2.0-alpha02"
    def archLifecycleVersion = "2.2.0-rc02"
    def daggerVersion = "2.21"
    def koinVersion = "2.0.1"
    def glideVersion = "4.9.0"
    def multidexVersion = "2.0.0"
    def butterKnifeVersion = '9.0.0-rc2'
    def kotlinKtxVersion = '1.2.0-alpha02'
    def navigationVersion = "2.2.0-rc01"
    def archNavigationTestVersion = "1.0.0-alpha06"
    def googleBillingVersion = "2.0.1"
    def materialVersion = "1.2.0-alpha01"
    def browserVersion = "1.2.0-alpha09"

    // RxJava
    def rxJavaVersion = "2.2.2"
    def rxJavaAndroidVersion = "2.1.0"
    def rxKotlinVersion = "2.0.0"

    //Timber
    def timberVersion = "4.7.1"

    //Retrofit
    def retrofitVersion = "2.4.0"
    def retrofitAdapterVersion = "0.9.2"

    def guavaVersion = "27.0.1-android"

    //Test
    def junitVersion = "4.12"
    def mockitoKotlinVersion = "2.0.0-RC2"
    def archCoreTestingVersion = "1.1.1"
    def powerMockVersion = '2.0.0-beta.5'
    def mockkVersion = '1.9.3'

    // Fabric
    def fabricCrashlyticsVersion = "2.9.5"

    def newRelicVersion = "5.23.0"

    def jodaTimeVersion = "2.9.9"

    def autoValueVersion = "1.5"
    def autoValueGson = "0.5.0"
    def autoValueParcelVersion = "0.2.5"

    def ottoVersion = '1.3.8'

    // Room DB
    def roomRuntimeVersion = "2.2.2"

    def leakCanaryVersion = '2.0-beta-2'
    def mockitoVersion = "2.11.0"

    //Coroutines
    def coroutinesVersion = '1.2.1'

    //Coroutines
    def okhttp3Version = '3.14.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}"
    implementation "androidx.appcompat:appcompat:${appCompatVersion}"
    implementation "androidx.cardview:cardview:${cardViewVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}"

    implementation "androidx.multidex:multidex:${multidexVersion}"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:${archLifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${archLifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${archLifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-process:${archLifecycleVersion}"

    // Recycler View
    implementation "androidx.recyclerview:recyclerview:${recyclerViewVersion}"

    implementation "androidx.fragment:fragment:${fragmentVersion}"
    implementation "androidx.browser:browser:${browserVersion}"
    implementation "androidx.core:core-ktx:${kotlinKtxVersion}"

    // ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:${archLifecycleVersion}" // use -ktx for Kotlin

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:${navigationVersion}"
    implementation "androidx.navigation:navigation-ui-ktx:${navigationVersion}"

    //Guava is required for dagger, ideally should have been a transitive one but it isnt
    implementation "com.google.guava:guava:$guavaVersion"

    //Dagger2
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    implementation "com.google.dagger:dagger:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    implementation "com.google.dagger:dagger-compiler:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-processor:${daggerVersion}"

    //Koin
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-androidx-scope:$koinVersion"
    implementation "org.koin:koin-androidx-viewmodel:$koinVersion"
    implementation "org.koin:koin-test:$koinVersion"

    //glide
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    implementation "com.github.bumptech.glide:compiler:$glideVersion"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutinesVersion}"

    //Okhttp3
    implementation "com.squareup.okhttp3:okhttp:${okhttp3Version}"
    implementation "com.squareup.okhttp3:mockwebserver:${okhttp3Version}"

    //RxJava
    implementation "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxJavaAndroidVersion}"
    implementation "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}"

    //Fabric
    implementation dependencies.create("com.crashlytics.sdk.android:crashlytics:${fabricCrashlyticsVersion}@aar") {
        transitive = true
    }

    //Timber
    implementation "com.jakewharton.timber:timber:${timberVersion}"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${retrofitAdapterVersion}"


    //Test resources
    implementation "junit:junit:${junitVersion}"
    implementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}"
    implementation "android.arch.core:core-testing:${archCoreTestingVersion}"
    implementation "android.arch.navigation:navigation-testing-ktx:${archNavigationTestVersion}"
    implementation "org.mockito:mockito-core:$mockitoVersion"
    implementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    implementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    implementation "io.mockk:mockk:$mockkVersion"
    implementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

    // imported from other repos
    implementation "com.google.android.material:material:$materialVersion"
    implementation "net.danlew:android.joda:$jodaTimeVersion"

    implementation "com.google.auto.value:auto-value:$autoValueVersion"
    implementation "com.ryanharter.auto.value:auto-value-parcel:$autoValueParcelVersion"
    implementation "com.ryanharter.auto.value:auto-value-gson:$autoValueGson"

    // Room
    implementation "androidx.room:room-runtime:$roomRuntimeVersion"
    implementation "androidx.room:room-compiler:$roomRuntimeVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata:$archLifecycleVersion"

    implementation "com.squareup:otto:$ottoVersion"

    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    implementation "com.jakewharton:butterknife-compiler:$butterKnifeVersion"


    implementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
